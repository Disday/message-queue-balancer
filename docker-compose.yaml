services:
  main:
    build:
      context: .
      dockerfile: ./apps/main/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/main:/usr/src/app/apps/main
      - ./libs:/usr/src/app/libs
    # command: tail -F 'asd'
    entrypoint: bash -c "pnpm i && pnpm start:dev"
    depends_on:
      rabbitmq:
        condition: service_healthy

  notifier:
    build:
      context: .
      dockerfile: ./apps/notifier/Dockerfile
    # ports:
      # - "4000:4000"
    volumes:
      - ./apps/notifier:/usr/src/app/apps/notifier
      - ./libs:/usr/src/app/libs
    entrypoint: bash -c "pnpm i && pnpm start:dev"
    depends_on:
      rabbitmq:
        condition: service_healthy

  receiver:
    build:
      context: .
      dockerfile: ./apps/receiver/Dockerfile
    volumes:
      - ./apps/receiver:/usr/src/app/apps/receiver
      - /usr/src/app/apps/receiver/node_modules
    entrypoint: bash -c "pnpm i && pnpm start:dev"
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
        - "5672:5672"
        - "15672:15672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 3s
      timeout: 5s
      retries: 5
